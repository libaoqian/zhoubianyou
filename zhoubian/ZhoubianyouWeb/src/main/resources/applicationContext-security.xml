<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:b="http://www.springframework.org/schema/beans" xmlns:beans="http://www.springframework.org/schema/beans"
	 xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd">

	<b:bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<b:property name="basename"
			value="classpath:messages_zh_CN" />
	</b:bean>
	
	<http pattern="/main/login.do" security="none" />
	<http auto-config="true" use-expressions="true" >
		<!--仅拦截到manager下面的内容，具备access对应权限的 -->
		<intercept-url pattern="/main/**"  access="hasRole('ROLE_ADMIN')" />
		<!-- 设置登录过滤器 
		<custom-filter before="FORM_LOGIN_FILTER" ref="authenticationProcessingFilter" />-->
		<!-- 登录表单设置 -->
		<form-login login-page="/main/login.do" 
		login-processing-url="/main/j_spring_security_check" 
		default-target-url="/main/index.do"
		authentication-failure-url="/main/login.do" />
		<!-- 登出操作后跳转到该页面 -->
		<logout logout-success-url="/main/index.do" delete-cookies="JSESSIONID" />
		<remember-me />

		<!-- SESSION超时后跳转到该页面 -->
		<session-management invalid-session-url="/main/login.do">
		</session-management>
		<csrf disabled="true" />
	</http>
	 <security:authentication-manager>
        <security:authentication-provider>
        <security:password-encoder hash="md5"></security:password-encoder>
			<security:jdbc-user-service data-source-ref="dataSource"
				group-authorities-by-username-query="SELECT g.id,g.groupname,role.role
							 FROM t_group AS g 
							 LEFT OUTER JOIN t_group_role AS grouprole ON (g.id = grouprole.groupid)
							 LEFT OUTER JOIN t_role AS role ON (role.id = grouprole.roleid)
							 LEFT OUTER JOIN t_group_user AS groupuser on (g.id = groupuser.groupid)
							 LEFT OUTER JOIN t_admin ON (t_admin.id = groupuser.userid)
							 WHERE t_admin.nickname = ?"
				users-by-username-query="SELECT t_admin.nickname AS username,t_admin.passwd as password,'true' AS enabled
							 FROM t_admin
							 WHERE t_admin.nickname = ?"
				authorities-by-username-query="SELECT t_admin.nickname AS username,role.role as authorities
							   FROM t_admin 
							   LEFT OUTER JOIN t_user_role AS userrole ON(t_admin.id = userrole.userid)
							   LEFT OUTER JOIN t_role AS role ON (userrole.roleid = role.id)
							   WHERE t_admin.nickname = ?" />
        </security:authentication-provider>
       
    </security:authentication-manager>
    

</beans:beans>
