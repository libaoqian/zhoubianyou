<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-4.3.xsd  
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">
                        
	<!-- 数据库连接配置文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" local-override="true" />
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${jdbc_url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<property name="initialSize" value="${initialSize}"></property>
		<property name="maxActive" value="${maxActive}"></property>
		<property name="maxIdle" value="${maxIdle}"></property>
		<property name="minIdle" value="${minIdle}"></property>
		<property name="maxWait" value="${maxWait}"></property>
	</bean>

	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="plugins">
			<array>
				<!-- 饰品sql转换插件
				<bean class="com.shidai.shidai.product.ProductSqlHelper.ProductSqlInterceptor">
					<property name="properties">
						<value>
							prefixes=com.shidai.shidai.product.IDao.ProductMapper,com.shidai.shidai.product.IDao.Product2typeMapper,\
							com.shidai.shidai.product.IDao.ProductTabMapper,com.shidai.shidai.user.IDao.UserCollectProductMapper,\
							com.shidai.shidai.product.IDao.ProductCommentMapper,com.shidai.shidai.product.IDao.ProductBuyUrlMapper,\
							com.shidai.shidai.product.IDao.ProductScoreCountMapper,com.shidai.shidai.product.IDao.ProductMapperV2,\
							com.shidai.shidai.product.IDao.ProductDetailMapper,com.shidai.shidai.product.IDao.ProductColorMapper,\
							com.shidai.shidai.product.IDao.ProductArgsMapper
						</value>
					</property>
				</bean> -->
				<!-- 分页插件 -->
				<bean class="com.github.pagehelper.PageHelper">
					<property name="properties">
						<value>
							dialect=mysql
							offsetAsPageNum=true
							rowBoundsWithCount=true
							pageSizeZero=true
							reasonable=true
							params=pageNum=start;pageSize=limit;
						</value>
					</property>
				</bean>
			</array>
		</property>
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath*:com/shidai/shidai/*/mapping/*.xml"></property>
	</bean>

	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.zhoubianyou.*.IDao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" />
</beans>